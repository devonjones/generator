#!/usr/bin/env python
import json as jsonlib
import sys

import click

from town_names.commands.deconstruct import deconstruct_command
from town_names.commands.generate import generate_command
from town_names.commands.proportions import proportion_command
from town_names.commands.tags import tag_command
from town_names.utils import GeneralEncoder

@click.group()
@click.pass_context
def cli(ctx):
    ctx.ensure_object(dict)

@cli.command()
@click.pass_context
def tags(ctx):
    tag_list = tag_command()
    print('\n'.join(tag_list))

@cli.command()
@click.option('--tag', '-t', multiple=True)
@click.argument('culture')
@click.pass_context
def generate(ctx, tag, culture):
    s = generate_command(tag, culture)
    print(s)
    print(s.description())

@cli.command()
@click.argument('name')
@click.option('--json/--no-json', default=False)
@click.pass_context
def deconstruct(ctx, name, json):
    s = deconstruct_command(name)
    if json:
        result = {}
        result[str(s)] = s.description_data()
        print(jsonlib.dumps(result, indent=2, cls=GeneralEncoder))
    else:
        print(s)
        print(s.description())

@cli.command()
@click.argument('culture')
@click.pass_context
def proportions(ctx, culture):
    out = proportion_command(culture)
    print(jsonlib.dumps(out, indent=2))

if __name__ == '__main__':
    sys.exit(cli(obj={}))


